#!/usr/bin/env python
# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright (c) 2011 Openstack, LLC.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

"""Admin/debug script to wipe rabbitMQ (AMQP) queues nova uses.
   This can be used if you need to change durable options on queues,
   or to wipe all messages in the queue system if things are in a
   serious bad way.

"""

import datetime
import gettext
import os
import sys
import time

# If ../nova/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
POSSIBLE_TOPDIR = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(POSSIBLE_TOPDIR, 'nova', '__init__.py')):
    sys.path.insert(0, POSSIBLE_TOPDIR)

gettext.install('nova', unicode=1)


from nova import context
from nova import exception
from nova import flags
from nova import log as logging
from nova import rpc
from nova import utils


FLAGS = flags.FLAGS
flags.DEFINE_boolean('delete_exchange', False, 'delete nova exchange too.')


def delete_exchange(exch):
    conn = rpc.create_connection()
    x = conn.get_channel()
    x.exchange_delete(exch)


def delete_queues(queues):
    conn = rpc.create_connection()
    x = conn.get_channel()
    for q in queues:
        x.queue_delete(q)

if __name__ == '__main__':
    utils.default_flagfile()
    args = flags.FLAGS(sys.argv)
    logging.setup()
    delete_queues(args[1:])
    if FLAGS.delete_exchange:
        delete_exchange(FLAGS.control_exchange)
